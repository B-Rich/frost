ifndef CRYSTAL_BIN
	CRYSTAL_BIN := $(shell which crystal)
endif

ifndef TRAIL_ENV
	TRAIL_ENV := development
endif

ifndef DATABASE_URL
	DATABASE_URL := postgres://postgres@/<%= name %>_$(TRAIL_ENV)
endif

ENV := TRAIL_ENV="$(TRAIL_ENV)" DATABASE_URL="$(DATABASE_URL)"


all: db
	$(ENV) $(CRYSTAL_BIN) build ./<%= name %>.cr

release: db
	$(ENV) $(CRYSTAL_BIN) build --release ./<%= name %>.cr

db:
	$(ENV) $(CRYSTAL_BIN) run db/schema.cr


.PHONY: tasks
tasks:
	@echo "Available tasks:"
	@grep --color=never -e "^[a-z]\+:" Makefile | sed s/://g


.PHONY: doc
doc: db
	$(ENV) $(CRYSTAL_BIN) docs ./<%= name %>.cr


.PHONY: routes
routes:
	$(CRYSTAL_BIN) config/routes.cr


src_files := $(wildcard ./*.cr) $(wildcard app/*.cr) $(wildcard app/**/*.cr) $(wildcard config/*.cr) $(wildcard config/**/*.cr)

.PHONY: notes
notes:
	@grep -oT -E '#\s+(NOTE|TODO|OPTIMIZE|FIXME).+' $(src_files) |\
		sed 's/:#\s*//g' |\
		awk -F'\t' '{print $$2" ("$$1")"}' | cut -b 2-


test_files := $(wildcard test/*_test.cr) $(wildcard test/**/*_test.cr) $(wildcard test/**/**/*_test.cr)

.PHONY: test
test: db
	$(ENV) $(CRYSTAL_BIN) run $(test_files) -- --verbose


#fixtures_files := $(wildcard test/fixtures/*.cr) $(wildcard test/fixtures/**/*.cr)
#lines := $(shell cat $(src_files) | grep -v "^$$" | wc -l )
#tests := $(shell cat $(fixtures_files) $(test_files) | grep -v '^$$' | wc -l )

#.PHONY: stats
#stats:
#	@echo " code: $(lines)"
#	@echo "tests: $(tests)"
#	@echo -n "ratio: `echo 'scale=6; 1.0 / $(lines) * $(tests)' | bc -q`"
#	@echo " (code-to-test)"
